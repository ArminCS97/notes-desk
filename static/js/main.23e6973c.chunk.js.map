{"version":3,"sources":["components/Header.js","components/Footer.js","components/Note.js","components/Notes.js","components/AddNote.js","components/Main.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","aria-hidden","Footer","href","target","brightnessByColor","color","isHEX","indexOf","isRGB","m","hasFullSpec","length","substr","match","r","parseInt","g","b","icons","delete","cancel","save","Note","props","dispatchFunction","useContext","dispatchContext","useState","body","tempBody","setTempBody","tempBgColor","setTempBgColor","editMode","setEditMode","style","backgroundColor","bodyEditable","value","onChange","e","bodyReadonly","onClick","readOnly","deleteButton","type","id","colorPicker","onChangeComplete","event","hex","saveButton","cancelButton","tabIndex","Notes","notesJSX","notes","sort","a","timeAdded","map","note","AddNote","noteTemp","setNoteTemp","addIcon","Date","getTime","state","uniqueId","Math","floor","random","pow","onAdd","React","createContext","Main","useReducer","action","newNotes","index","findIndex","filter","newNote","dispatch","Provider","Body","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23e6973c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"app-header\">\r\n            <header>\r\n                <h1><i className=\"fa fa-sticky-note\" aria-hidden=\"true\"></i> NotesDesk</h1>\r\n                <h3>Simple sticky notes app created with React.js</h3>\r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"app-footer\">\r\n            <footer>\r\n                <h4>Created by <a href=\"https://github.com/WinterFirebird\" target=\"_blank\">Arman Grigoryan</a></h4>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext, useState, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { dispatchContext } from './Main'\r\nimport { GithubPicker } from 'react-color';\r\n\r\n/**\r\n * Calculate brightness value by RGB or HEX color.\r\n * @param color (String) The color value in RGB or HEX (for example: #000000 || #000 || rgb(0,0,0) || rgba(0,0,0,0))\r\n * @returns (Number) The brightness value (dark) 0 ... 255 (light)\r\n */\r\nconst brightnessByColor = (color) => {\r\n    var color = \"\" + color, isHEX = color.indexOf(\"#\") === 0, isRGB = color.indexOf(\"rgb\") === 0;\r\n    if (isHEX) {\r\n    const hasFullSpec = color.length === 7;\r\n    var m = color.substr(1).match(hasFullSpec ? /(\\S{2})/g : /(\\S{1})/g);\r\n    if (m) var r = parseInt(m[0] + (hasFullSpec ? '' : m[0]), 16), g = parseInt(m[1] + (hasFullSpec ? '' : m[1]), 16), b = parseInt(m[2] + (hasFullSpec ? '' : m[2]), 16);\r\n    }\r\n    if (isRGB) {\r\n    var m = color.match(/(\\d+){3}/g);\r\n    if (m) var r = m[0], g = m[1], b = m[2];\r\n    }\r\n    if (typeof r != \"undefined\") return ((r*299)+(g*587)+(b*114))/1000;\r\n}\r\n\r\nconst icons = {\r\n    delete: <i className=\"fa fa-times\" aria-hidden=\"true\"></i>,\r\n    cancel: <i className=\"fa fa-ban\" aria-hidden=\"true\"></i>,\r\n    save: <i className=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>\r\n}\r\n\r\n\r\nfunction Note(props) {\r\n\r\n    /**\r\n     * the dispatch function of the state of 'Main' component \r\n     * @param {object} action\r\n     */\r\n    const dispatchFunction = useContext(dispatchContext)\r\n    const [tempBody, setTempBody] = useState(props.body)\r\n    const [tempBgColor, setTempBgColor] = useState(props.color)\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const style = {\r\n        backgroundColor:tempBgColor,\r\n        color:((brightnessByColor(tempBgColor)) > 150? \"#2b2a2a\" : \"#fcfcfa\"),\r\n    }\r\n\r\n    \r\n    /**\r\n     * to pass the temp state to the main state\r\n     */\r\n    const editSaveHandler = () => {\r\n        dispatchFunction({type: \"edit\", body: tempBody, color: tempBgColor, id: props.id})\r\n        setEditMode(false)\r\n    }\r\n\r\n    /**\r\n     * to return the note to its last saved state\r\n     */\r\n    const editCancelHandler = () => {\r\n        setTempBody(props.body)\r\n        setTempBgColor(props.color)\r\n        setEditMode(false)\r\n    }\r\n\r\n    /**\r\n     * passes the chosen color to the temp. state of the note \r\n     * @param {string} color \r\n     * @param {object} event \r\n     */\r\n    const handleColorChange = (color, event) => {\r\n        setTempBgColor(color.hex)\r\n    }\r\n\r\n    const bodyEditable = <textarea value={tempBody} onChange={e => setTempBody(e.target.value)} className=\"note-textarea\"></textarea> \r\n    const bodyReadonly = <textarea value={tempBody} onClick={() => setEditMode(true)} className=\"note-textarea\" readOnly></textarea> \r\n\r\n\r\n    const deleteButton = <button onClick={() => dispatchFunction({type: \"delete\", id: props.id})}>{icons.delete}</button>\r\n    //note editing mode\r\n    const colorPicker = <GithubPicker onChangeComplete={handleColorChange}/>\r\n    const saveButton = <button onClick={() => editSaveHandler()}>{icons.save} Save</button>\r\n    const cancelButton = <button onClick={() => editCancelHandler()}>{icons.cancel} Cancel</button>\r\n\r\n\r\n    return (\r\n        <div className=\"note\" style={style} tabIndex=\"1\">\r\n            <div className=\"note-toolbar\">\r\n                {editMode? <>{colorPicker}{saveButton}{cancelButton}</> : <>{deleteButton}</> }\r\n            </div>\r\n            <div className=\"note-body\">\r\n                {editMode? <>{bodyEditable}</> : <>{bodyReadonly}</>}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from './Note'\r\n\r\nfunction Notes(props) {\r\n\r\n    const notes = props.notes\r\n    // to sort the notes by descending order\r\n    const notesSorted = notes.sort((a, b) => b.timeAdded - a.timeAdded)\r\n\r\n    const notesJSX = notesSorted.map(note => {\r\n        return <Note body={note.body} color={note.color} id={note.id} key={note.id}/>\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {notesJSX}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n","import React, { useState, useContext } from 'react'\r\nimport { dispatchContext } from './Main'\r\n\r\n\r\nfunction AddNote() {\r\n    /**\r\n     * the dispatch function of the state of 'Main' component \r\n     * @param {object} action\r\n     */\r\n    const dispatchFunction = useContext(dispatchContext)\r\n\r\n    const [noteTemp, setNoteTemp] = useState({\r\n        id:'',\r\n        body:'',\r\n        color:'#FEF3BD',\r\n        timeAdded:''\r\n    })\r\n\r\n    const addIcon = <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n    \r\n    /**\r\n     * attaches a unique id to a blank note defined in its state and sends to Main component's dispatch function to\r\n     */\r\n    const onAdd = () => {\r\n        let d = new Date()\r\n        let timeAdded = d.getTime()\r\n        dispatchFunction({type:\"add\", state: noteTemp, timeAdded: timeAdded})\r\n        //the code below is to generate a new id for the next onAdd() event\r\n        let uniqueId = Math.floor(Math.random() * Math.pow(10, 9)) + 1\r\n        setNoteTemp({...noteTemp, id: uniqueId})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"addNote\">\r\n            <button onClick={() => onAdd()}>{addIcon}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","import React, { useReducer } from 'react'\r\nimport Notes from './Notes'\r\nimport AddNote from './AddNote'\r\n\r\nexport const dispatchContext = React.createContext()\r\n\r\nfunction Main() {\r\n\r\n    const initialState = [\r\n        {\r\n            id:147286491,\r\n            body: \"Welcome to NotesDesk! \\n\\nYou can add your own notes here by clicking on the plus icon. \\nTo edit the note or change its color, simply click on it. \\nHave a great experience!\",\r\n            color: \"#FEF3BD\",\r\n            timeAdded: 1608212136484,\r\n        }\r\n    ]\r\n\r\n    \r\n    const reducer = (value, action={type:null, state:null, id:null, color:null, timeAdded:null}) => {\r\n        if(action.type === \"edit\") {\r\n            let newNotes = value;\r\n            let index = value.findIndex(note => note.id === action.id);\r\n            newNotes[index].color = action.color\r\n            newNotes[index].body = action.body\r\n            return [...newNotes]\r\n        }\r\n        if(action.type === \"delete\") {\r\n            let newNotes = value.filter(note => !(note.id === action.id))\r\n            return newNotes\r\n        }\r\n        if(action.type === \"add\") {\r\n            let newNote = action.state\r\n            newNote.timeAdded = action.timeAdded\r\n            return [...value, newNote]\r\n        }\r\n        else {return value}\r\n    }\r\n\r\n    \r\n    const [notes, dispatch] = useReducer(reducer,initialState)\r\n\r\n    return (\r\n        <div className=\"notes-grid\">\r\n            <dispatchContext.Provider value={dispatch}>\r\n                <AddNote notes={notes}/>\r\n                <Notes notes={notes}/>\r\n            </dispatchContext.Provider>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport Main from './Main'\r\n\r\nfunction Body() {\r\n\r\n    return (\r\n        <div className=\"app-body\">\r\n            <Main />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport './Style.scss';\nimport '.'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Body from './components/Body';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Body />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}